---
- hosts: all

  sudo: yes

  vars:
    - db_name: ckan_default
    - db_user: ckan_default
    - db_password: ckan_default
    - ckan_package_filename: 'python-ckan_2.0_amd64.deb'

  tasks:
    - name: Update apt cache
      apt: update_cache=yes

    - name: Upgrade all safe packages
      apt: upgrade=safe

    - name: Install unattended upgrades (Debian/Ubuntu only)
      apt: pkg=unattended-upgrades state=installed
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

    - name: 'Make sure unattended-upgrades only installs from $ubuntu_release-security'
      lineinfile: 'dest=/etc/apt/apt.conf.d/50unattended-upgrades regexp="$ubuntu_release-updates" state=absent'
      when: ansible_distribution == 'Ubuntu'

    - name: Install necessities and nice-to-haves
      apt: pkg={{ item }} state=installed
      with_items:
        - acl
        - apache2
        - apt-transport-https
        - apticron
        - aptitude
        - build-essential
        - debian-goodies
        - fail2ban
        - git
        - htop
        - iftop
        - iotop
        - libapache2-mod-wsgi
        - libpq-dev
        - nginx
        - postgresql
        - python
        - python-pip
        - python-psycopg2
        - python-pycurl
        - python-software-properties
        - python-virtualenv
        - screen
        - solr-jetty
        - sudo
        - update-notifier-common
        - wget
      when: ansible_pkg_mgr == 'apt'

    - name: Enable passwordless sudo
      lineinfile: 'dest=/etc/sudoers regexp="sudo ALL=NOPASSWD: ALL" line="%sudo ALL=NOPASSWD: ALL" state=present'

    - name: Create ckan folder
      file: path=/vagrant/ckan state=directory

    - name: Create symlink for /etc/ckan
      file: src=/vagrant/ckan/etc dest=/etc/ckan state=link

    - name: Create symlink for /usr/lib/ckan
      file: src=/vagrant/ckan/lib dest=/var/lib/ckan state=link

    # Postgres
    - name: Ensure CKAN database is created
      postgresql_db: 'name={{ db_name }}'
      sudo_user: postgres

    - name: Ensure CKAN database user can access CKAN database
      postgresql_user: 'db={{ db_name }} name={{ db_user }} password={{ db_password }} priv=ALL'
      sudo_user: postgres

    - name: Minimise CKAN database user priveliges
      postgresql_user: 'name={{ db_user }} role_attr_flags=NOSUPERUSER,NOCREATEROLE,NOCREATEDB'
      sudo_user: postgres

    - name: Set CKAN database server address
      lineinfile: 'dest=/etc/ckan/default/production.ini regexp=sqlalchemy.url line="sqlalchemy.url = postgresql://{{ db_user }}:{{ db_password }}@localhost/{{ db_name }}?sslmode=disable"'

    - name: Ensure database is initialised
      command: ckan db init
      notify:
        - Restart Apache
        - Restart Nginx

    - name: Remove Repoze.who configuration file for CKAN
      file: path=/usr/lib/ckan/default/src/ckan/who.ini state=absent
      when: ckan_installed.changed

    - name: Link Repoze.who configuration file for CKAN
      file: 'path=/usr/lib/ckan/default/src/ckan/who.ini src=/etc/ckan/default/who.ini state=link'

  handlers:
    - name: Restart Apache
      service: name=apache2 state=restarted

    - name: Restart Nginx
      service: name=nginx state=restarted

    - name: Start Jetty
      service: name=jetty state=started

    - name: Restart Jetty
      service: name=jetty state=restarted

